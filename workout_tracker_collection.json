{
	"info": {
		"_postman_id": "workout-tracker-api",
		"name": "Workout Tracker API",
		"description": "Complete API collection for Workout Tracker application with JWT authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "workout_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "exercise_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "log_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    pm.test('Status code is 201', function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"    ",
									"    const response = pm.response.json();",
									"    pm.test('Response has success flag', function () {",
									"        pm.expect(response.success).to.be.true;",
									"    });",
									"    ",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set('user_id', response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.test('Status code is 200', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"    const response = pm.response.json();",
									"    pm.test('Response contains tokens', function () {",
									"        pm.expect(response.data).to.have.property('accessToken');",
									"        pm.expect(response.data).to.have.property('refreshToken');",
									"    });",
									"    ",
									"    // Save tokens to collection variables",
									"    if (response.data.accessToken) {",
									"        pm.collectionVariables.set('access_token', response.data.accessToken);",
									"    }",
									"    if (response.data.refreshToken) {",
									"        pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usernameOrEmail\": \"johndoe\",\n    \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    ",
									"    if (response.data.accessToken) {",
									"        pm.collectionVariables.set('access_token', response.data.accessToken);",
									"    }",
									"    if (response.data.refreshToken) {",
									"        pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Exercises",
			"item": [
				{
					"name": "Get All Exercises",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises?page=0&size=20&sort=name,asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "sort",
									"value": "name,asc"
								},
								{
									"key": "category",
									"value": "STRENGTH",
									"disabled": true
								},
								{
									"key": "muscleGroup",
									"value": "CHEST",
									"disabled": true
								},
								{
									"key": "searchTerm",
									"value": "press",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Exercise by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises/{{exercise_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises",
								"{{exercise_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Exercise Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Muscle Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises/muscle-groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises",
								"muscle-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Exercises by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises?category=STRENGTH&page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises"
							],
							"query": [
								{
									"key": "category",
									"value": "STRENGTH"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Exercises",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/exercises?searchTerm=bench&muscleGroup=CHEST",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"exercises"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "bench"
								},
								{
									"key": "muscleGroup",
									"value": "CHEST"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Workouts",
			"item": [
				{
					"name": "Create Workout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set('workout_id', response.data.id);",
									"        console.log('Workout ID saved: ' + response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Upper Body Day\",\n    \"description\": \"Focus on chest and shoulders\",\n    \"scheduledDate\": \"2024-12-20\",\n    \"scheduledTime\": \"10:00:00\",\n    \"exercises\": [\n        {\n            \"exerciseId\": 1,\n            \"sets\": 4,\n            \"reps\": 12,\n            \"weight\": 60.0,\n            \"restSeconds\": 90,\n            \"orderIndex\": 1,\n            \"notes\": \"Focus on form\"\n        },\n        {\n            \"exerciseId\": 2,\n            \"sets\": 3,\n            \"reps\": 15,\n            \"weight\": 20.0,\n            \"restSeconds\": 60,\n            \"orderIndex\": 2\n        },\n        {\n            \"exerciseId\": 9,\n            \"sets\": 3,\n            \"reps\": 10,\n            \"weight\": 40.0,\n            \"restSeconds\": 90,\n            \"orderIndex\": 3\n        }\n    ],\n    \"notes\": \"Remember to warm up properly\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/workouts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Workouts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts?page=0&size=10&sort=scheduledDate,desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "scheduledDate,desc"
								},
								{
									"key": "status",
									"value": "SCHEDULED",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2024-01-01",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2024-12-31",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workout by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts/{{workout_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts",
								"{{workout_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Workout",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Upper Body Workout\",\n    \"description\": \"Modified workout plan\",\n    \"scheduledDate\": \"2024-12-21\",\n    \"scheduledTime\": \"09:00:00\",\n    \"durationMinutes\": 60,\n    \"notes\": \"Changed schedule and duration\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/workouts/{{workout_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts",
								"{{workout_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete Workout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts/{{workout_id}}/complete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts",
								"{{workout_id}}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Workout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts/{{workout_id}}/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts",
								"{{workout_id}}",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workout",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts/{{workout_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts",
								"{{workout_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Workouts by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts?status=COMPLETED&page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts"
							],
							"query": [
								{
									"key": "status",
									"value": "COMPLETED"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workouts by Date Range",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workouts?startDate=2024-12-01&endDate=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workouts"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-12-01"
								},
								{
									"key": "endDate",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Workout Logs",
			"item": [
				{
					"name": "Create Log Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set('log_id', response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"exerciseId\": 1,\n    \"actualSets\": 4,\n    \"actualReps\": 12,\n    \"actualWeight\": 65.0,\n    \"notes\": \"Felt strong today, increased weight\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/logs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Log with Workout Plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workoutPlanId\": {{workout_id}},\n    \"exerciseId\": 2,\n    \"actualSets\": 3,\n    \"actualReps\": 15,\n    \"actualWeight\": 22.5,\n    \"notes\": \"Completed as part of workout plan\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/logs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/logs?page=0&size=20&sort=loggedAt,desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "sort",
									"value": "loggedAt,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Log Entry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"exerciseId\": 1,\n    \"actualSets\": 4,\n    \"actualReps\": 10,\n    \"actualWeight\": 70.0,\n    \"notes\": \"Updated - actually did more weight\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/logs/{{log_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								"{{log_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Log Entry",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/logs/{{log_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								"{{log_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Progress & Reports",
			"item": [
				{
					"name": "Get Progress Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/progress/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"progress",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Exercise Progress",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/progress/exercise/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"progress",
								"exercise",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Weekly Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reports/weekly",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reports",
								"weekly"
							],
							"query": [
								{
									"key": "weekStart",
									"value": "2024-12-09",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Monthly Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reports/monthly?year=2024&month=12",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reports",
								"monthly"
							],
							"query": [
								{
									"key": "year",
									"value": "2024"
								},
								{
									"key": "month",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Custom Date Range Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/reports/custom?startDate=2024-12-01&endDate=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reports",
								"custom"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-12-01"
								},
								{
									"key": "endDate",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Health Check",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actuator/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/swagger-ui.html",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"swagger-ui.html"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}